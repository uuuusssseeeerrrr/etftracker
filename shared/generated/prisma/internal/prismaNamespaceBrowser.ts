
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models'
export type * from './prismaNamespace'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  EtfList: 'EtfList',
  EtfPriceHistory: 'EtfPriceHistory',
  EtfStockList: 'EtfStockList',
  StockList: 'StockList',
  StockPriceHistory: 'StockPriceHistory',
  Token: 'Token',
  rate: 'rate'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const EtfListScalarFieldEnum = {
  market: 'market',
  stockCode: 'stockCode',
  etfName: 'etfName',
  companyName: 'companyName',
  benchmarkIndex: 'benchmarkIndex',
  indexComment: 'indexComment',
  tradingLot: 'tradingLot',
  trustFeeRate: 'trustFeeRate',
  stdPdno: 'stdPdno',
  isin_code: 'isin_code',
  regDate: 'regDate',
  modDate: 'modDate'
} as const

export type EtfListScalarFieldEnum = (typeof EtfListScalarFieldEnum)[keyof typeof EtfListScalarFieldEnum]


export const EtfPriceHistoryScalarFieldEnum = {
  priceIdx: 'priceIdx',
  market: 'market',
  stockCode: 'stockCode',
  open: 'open',
  high: 'high',
  low: 'low',
  price: 'price',
  lastDayPrice: 'lastDayPrice',
  h52p: 'h52p',
  l52p: 'l52p',
  tXprc: 'tXprc',
  tXdif: 'tXdif',
  tXrat: 'tXrat',
  tRate: 'tRate',
  regDate: 'regDate'
} as const

export type EtfPriceHistoryScalarFieldEnum = (typeof EtfPriceHistoryScalarFieldEnum)[keyof typeof EtfPriceHistoryScalarFieldEnum]


export const EtfStockListScalarFieldEnum = {
  market: 'market',
  etfStockCode: 'etfStockCode',
  stockCode: 'stockCode',
  checkDate: 'checkDate',
  etfPercent: 'etfPercent'
} as const

export type EtfStockListScalarFieldEnum = (typeof EtfStockListScalarFieldEnum)[keyof typeof EtfStockListScalarFieldEnum]


export const StockListScalarFieldEnum = {
  market: 'market',
  stockCode: 'stockCode',
  stockName: 'stockName',
  trCrcyCd: 'trCrcyCd',
  buyUnitQty: 'buyUnitQty',
  prdtName: 'prdtName',
  stockComment: 'stockComment',
  stdPdno: 'stdPdno',
  isin_code: 'isin_code',
  regDate: 'regDate',
  modDate: 'modDate'
} as const

export type StockListScalarFieldEnum = (typeof StockListScalarFieldEnum)[keyof typeof StockListScalarFieldEnum]


export const StockPriceHistoryScalarFieldEnum = {
  priceIdx: 'priceIdx',
  market: 'market',
  stockCode: 'stockCode',
  open: 'open',
  high: 'high',
  low: 'low',
  price: 'price',
  lastDayPrice: 'lastDayPrice',
  tomv: 'tomv',
  h52p: 'h52p',
  l52p: 'l52p',
  perx: 'perx',
  pbrx: 'pbrx',
  epsx: 'epsx',
  bpsx: 'bpsx',
  tXprc: 'tXprc',
  tXdif: 'tXdif',
  tXrat: 'tXrat',
  tRate: 'tRate',
  eIcod: 'eIcod',
  regDate: 'regDate'
} as const

export type StockPriceHistoryScalarFieldEnum = (typeof StockPriceHistoryScalarFieldEnum)[keyof typeof StockPriceHistoryScalarFieldEnum]


export const TokenScalarFieldEnum = {
  tokenIdx: 'tokenIdx',
  regDate: 'regDate',
  token: 'token'
} as const

export type TokenScalarFieldEnum = (typeof TokenScalarFieldEnum)[keyof typeof TokenScalarFieldEnum]


export const RateScalarFieldEnum = {
  rate_idx: 'rate_idx',
  reg_date: 'reg_date',
  usd_rate: 'usd_rate',
  jpy_rate: 'jpy_rate',
  eur_rate: 'eur_rate',
  sgd_rate: 'sgd_rate'
} as const

export type RateScalarFieldEnum = (typeof RateScalarFieldEnum)[keyof typeof RateScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const EtfListOrderByRelevanceFieldEnum = {
  market: 'market',
  stockCode: 'stockCode',
  etfName: 'etfName',
  companyName: 'companyName',
  benchmarkIndex: 'benchmarkIndex',
  indexComment: 'indexComment',
  tradingLot: 'tradingLot',
  trustFeeRate: 'trustFeeRate',
  stdPdno: 'stdPdno',
  isin_code: 'isin_code'
} as const

export type EtfListOrderByRelevanceFieldEnum = (typeof EtfListOrderByRelevanceFieldEnum)[keyof typeof EtfListOrderByRelevanceFieldEnum]


export const EtfPriceHistoryOrderByRelevanceFieldEnum = {
  market: 'market',
  stockCode: 'stockCode',
  open: 'open',
  high: 'high',
  low: 'low',
  price: 'price',
  lastDayPrice: 'lastDayPrice',
  h52p: 'h52p',
  l52p: 'l52p',
  tXprc: 'tXprc',
  tXdif: 'tXdif',
  tXrat: 'tXrat',
  tRate: 'tRate'
} as const

export type EtfPriceHistoryOrderByRelevanceFieldEnum = (typeof EtfPriceHistoryOrderByRelevanceFieldEnum)[keyof typeof EtfPriceHistoryOrderByRelevanceFieldEnum]


export const EtfStockListOrderByRelevanceFieldEnum = {
  market: 'market',
  etfStockCode: 'etfStockCode',
  stockCode: 'stockCode'
} as const

export type EtfStockListOrderByRelevanceFieldEnum = (typeof EtfStockListOrderByRelevanceFieldEnum)[keyof typeof EtfStockListOrderByRelevanceFieldEnum]


export const StockListOrderByRelevanceFieldEnum = {
  market: 'market',
  stockCode: 'stockCode',
  stockName: 'stockName',
  trCrcyCd: 'trCrcyCd',
  buyUnitQty: 'buyUnitQty',
  prdtName: 'prdtName',
  stockComment: 'stockComment',
  stdPdno: 'stdPdno',
  isin_code: 'isin_code'
} as const

export type StockListOrderByRelevanceFieldEnum = (typeof StockListOrderByRelevanceFieldEnum)[keyof typeof StockListOrderByRelevanceFieldEnum]


export const StockPriceHistoryOrderByRelevanceFieldEnum = {
  market: 'market',
  stockCode: 'stockCode',
  open: 'open',
  high: 'high',
  low: 'low',
  price: 'price',
  lastDayPrice: 'lastDayPrice',
  tomv: 'tomv',
  h52p: 'h52p',
  l52p: 'l52p',
  perx: 'perx',
  pbrx: 'pbrx',
  epsx: 'epsx',
  bpsx: 'bpsx',
  tXprc: 'tXprc',
  tXdif: 'tXdif',
  tXrat: 'tXrat',
  tRate: 'tRate',
  eIcod: 'eIcod'
} as const

export type StockPriceHistoryOrderByRelevanceFieldEnum = (typeof StockPriceHistoryOrderByRelevanceFieldEnum)[keyof typeof StockPriceHistoryOrderByRelevanceFieldEnum]


export const TokenOrderByRelevanceFieldEnum = {
  regDate: 'regDate',
  token: 'token'
} as const

export type TokenOrderByRelevanceFieldEnum = (typeof TokenOrderByRelevanceFieldEnum)[keyof typeof TokenOrderByRelevanceFieldEnum]

