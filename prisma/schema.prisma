generator client {
  provider = "prisma-client"
  output   = "../.prisma"
  binaryTargets   = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model EtfList {
  market         String         @default("") @db.VarChar(10)
  stockCode      String         @default("") @map("stock_code") @db.VarChar(20)
  etfName        String?        @map("etf_name") @db.VarChar(255)
  companyName    String?        @map("company_name") @db.VarChar(50)
  benchmarkIndex String?        @map("benchmark_index") @db.VarChar(255)
  indexComment   String?        @map("index_comment") @db.Text
  tradingLot     String?        @map("trading_lot") @db.VarChar(10)
  trustFeeRate   String?        @map("trust_fee_rate") @db.VarChar(10)
  stdPdno        String?        @map("std_pdno") @db.VarChar(12)
  isin_code      String?        @db.VarChar(12)
  regDate        DateTime?      @default(now()) @map("reg_date") @db.DateTime(0)
  modDate        DateTime?      @default(now()) @map("mod_date") @db.DateTime(0)
  etfStockList   EtfStockList[]

  @@id([market, stockCode])
  @@map("etf_list")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model EtfPriceHistory {
  priceIdx     Int       @id @default(autoincrement()) @map("price_idx")
  market       String    @db.VarChar(10)
  stockCode    String    @map("stock_code") @db.VarChar(20)
  open         String?   @db.VarChar(12)
  high         String?   @db.VarChar(12)
  low          String?   @db.VarChar(12)
  price        String?   @db.VarChar(12)
  lastDayPrice String?   @map("last_day_price") @db.VarChar(12)
  h52p         String?   @db.VarChar(12)
  l52p         String?   @db.VarChar(12)
  tXprc        String?   @map("t_xprc") @db.VarChar(12)
  tXdif        String?   @map("t_xdif") @db.VarChar(12)
  tXrat        String?   @map("t_xrat") @db.VarChar(12)
  tRate        String?   @map("t_rate") @db.VarChar(12)
  regDate      DateTime? @default(now()) @map("reg_date") @db.DateTime(0)

  @@index([market, stockCode], map: "market_stock_code")
  @@index([regDate], map: "reg_date")
  @@map("etf_price_history")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model EtfStockList {
  market       String    @default("") @db.VarChar(10)
  etfStockCode String    @default("") @map("etf_stock_code") @db.VarChar(20)
  stockCode    String    @default("") @map("stock_code") @db.VarChar(20)
  checkDate    DateTime? @default(now()) @map("check_date") @db.DateTime(0)
  etfPercent   Float?    @map("etf_percent") @db.Float
  etfList      EtfList   @relation(fields: [market, etfStockCode], references: [market, stockCode], onUpdate: Restrict, map: "FK_etf_stock_list_etf_list")

  @@id([market, etfStockCode, stockCode])
  @@index([market, stockCode], map: "etf_stock_list_stock_list_market_stock_code_fk")
  @@map("etf_stock_list")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model StockList {
  market       String    @default("") @db.VarChar(10)
  stockCode    String    @default("") @map("stock_code") @db.VarChar(20)
  stockName    String?   @map("stock_name") @db.VarChar(255)
  trCrcyCd     String?   @map("tr_crcy_cd") @db.VarChar(3)
  buyUnitQty   String?   @map("buy_unit_qty") @db.VarChar(10)
  prdtName     String?   @map("prdt_name") @db.VarChar(60)
  stockComment String?   @map("stock_comment") @db.Text
  stdPdno      String?   @map("std_pdno") @db.VarChar(12)
  isin_code    String?   @db.VarChar(12)
  regDate      DateTime? @default(now()) @map("reg_date") @db.DateTime(0)
  modDate      DateTime? @default(now()) @map("mod_date") @db.DateTime(0)

  @@id([market, stockCode])
  @@map("stock_list")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model StockPriceHistory {
  priceIdx     Int       @id @default(autoincrement()) @map("price_idx")
  market       String    @db.VarChar(10)
  stockCode    String    @map("stock_code") @db.VarChar(20)
  open         String?   @db.VarChar(12)
  high         String?   @db.VarChar(12)
  low          String?   @db.VarChar(12)
  price        String?   @db.VarChar(12)
  lastDayPrice String?   @map("last_day_price") @db.VarChar(12)
  tomv         String?   @db.VarChar(16)
  h52p         String?   @db.VarChar(12)
  l52p         String?   @db.VarChar(12)
  perx         String?   @db.VarChar(10)
  pbrx         String?   @db.VarChar(10)
  epsx         String?   @db.VarChar(10)
  bpsx         String?   @db.VarChar(10)
  tXprc        String?   @map("t_xprc") @db.VarChar(12)
  tXdif        String?   @map("t_xdif") @db.VarChar(12)
  tXrat        String?   @map("t_xrat") @db.VarChar(12)
  tRate        String?   @map("t_rate") @db.VarChar(12)
  eIcod        String?   @map("e_icod") @db.VarChar(50)
  regDate      DateTime? @default(now()) @map("reg_date") @db.DateTime(0)

  @@index([market, stockCode], map: "market_stock_code")
  @@index([regDate], map: "reg_date")
  @@map("stock_price_history")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Token {
  tokenIdx Int    @id @default(autoincrement()) @map("token_idx")
  regDate  String @default("") @map("reg_date") @db.Char(8)
  token    String @db.Text

  @@map("token")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rate {
  rate_idx Int      @id @default(autoincrement())
  reg_date DateTime @default(now()) @db.DateTime(0)
  usd_rate Decimal? @db.Decimal(6, 2)
  jpy_rate Decimal? @db.Decimal(6, 2)
  eur_rate Decimal? @db.Decimal(6, 2)
  sgd_rate Decimal? @db.Decimal(6, 2)

  @@index([reg_date(sort: Desc)], map: "rate_reg_date_index")
}
